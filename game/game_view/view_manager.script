local front_widths = { 148, 197, 290, 559, 0 }
local side_widths = {
	-- no 1
	{ 72, 27 },
	{ 107, 47 },
	{ 136 },
	{ 86 },
}


local function position_all(self)
	self.rows = {}
	for i = 1, 3 do
		local row = {}
		for ii = 1, 5 do
			local obj = go.get_id("R"..tostring(i).."_"..tostring(ii))
			table.insert(row, obj)
			local pos = go.get_position(obj)
			pos.x = front_widths[i]*(ii-3)
			pos.z = #self.rows*0.01 - math.abs(pos.x)*0.0000001
			go.set_position(pos, obj)
		end
		table.insert(self.rows, row)
	end
	for i = 4, 5 do
		local row = {}
		for ii = 1, 3 do
			if i ~= 5 or ii ~= 2 then
				local obj = go.get_id("R"..tostring(i).."_"..tostring(ii))
				table.insert(row, obj)
				local pos = go.get_position(obj)
				pos.x = front_widths[i]*(ii-2)
				pos.z = #self.rows*0.01 - math.abs(pos.x)*0.0000001
				go.set_position(pos, obj)
			end
		end
		table.insert(self.rows, row)
	end
end

function init(self)
   position_all(self)
end

local function update_view(self, slots)
	local count = 0
	for i,row in ipairs(self.rows) do
		for ii,obj in ipairs(row) do
			count = count + 1
			local slot = slots[count]
			if slot.is_wall == true then
				local index = slot.grid_pos.x+slot.grid_pos.y
				--msg.post(obj,"enable")
				msg.post(obj,"update",{ index = index } )
			else
				msg.post(obj,"disable")
			end
		end
	end
	msg.post("/game_view/Background","update")
end

function on_message(self, message_id, message, sender)
    if message_id == hash("update_view") then
    	update_view(self, message.slots)
    end
end